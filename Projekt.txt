-------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------
Monat 1: C# Basics																													|
-------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------
Woche 1: Einstieg in die Programmierung mit C#

Tag 1–2: Grundlegende Syntax: Variablen, Datentypen, einfache Operationen
Tag 3–4: Kontrollstrukturen: if, else, switch
Tag 5–6: Schleifen: for, while, do-while
Tag 7: Mini-Projekt: Einfache Zahlenspielerei (Multiplikationstabelle)
-------------------------------------------------------------------------------------------------------------------------------------
Woche 2: Arbeiten mit Methoden und Klassen

Tag 8–9: Methoden: Definition, Rückgabewerte, Parameter
Tag 10–11: Klassen und Objekte: Grundlagen von OOP
Tag 12: Konstruktoren und Destruktoren
Tag 13–14: Mini-Projekt: Einfache Adressbuch-App (Klassen mit Attributen)
-------------------------------------------------------------------------------------------------------------------------------------
Woche 3: Weiterführende OOP-Konzepte

Tag 15: Vererbung: Grundprinzipien
Tag 16: Polymorphismus: Virtuelle Methoden und Überschreiben
Tag 17–18: Abstrakte Klassen und Schnittstellen
Tag 19–21: Mini-Projekt: Fahrzeug-Verwaltungssystem (mit Vererbung)
-------------------------------------------------------------------------------------------------------------------------------------
Woche 4: Arbeiten mit Dateien und Fehlerbehandlung

Tag 22–23: Dateioperationen: Lesen und Schreiben
Tag 24: Exception Handling: try, catch, finally
Tag 25–26: Grundlagen der Serialisierung (JSON, XML)
Tag 27–28: Mini-Projekt: Ein Notizbuch mit Speichern und Laden
-------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------
Monat 2: C# WPF																														|
-------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------
Woche 1: Einführung in WPF

Tag 29–30: Was ist WPF? Grundlagen von XAML
Tag 31–32: Erstellen einfacher Layouts: Grid, StackPanel, Canvas
Tag 33–35: Grundlagen der Datenbindung
-------------------------------------------------------------------------------------------------------------------------------------
Woche 2: Interaktivität und Benutzeroberfläche

Tag 36–37: Arbeiten mit Steuerelementen: Button, TextBox, ListBox
Tag 38–39: Ereignisse und Event-Handling
Tag 40–42: Mini-Projekt: Ein einfacher Taschenrechner
-------------------------------------------------------------------------------------------------------------------------------------
Woche 3: Stil und Design in WPF

Tag 43–44: Einführung in Styles und Templates
Tag 45–46: Arbeiten mit Ressourcen und Themes
Tag 47–49: Mini-Projekt: To-Do-Listen-App mit benutzerdefiniertem Design
-------------------------------------------------------------------------------------------------------------------------------------
Woche 4: Datenbindung und Datenquellen

Tag 50–51: Einführung in ObservableCollection
Tag 52–53: Datenbindung an Listen und Tabellen (DataGrid)
Tag 54–56: Mini-Projekt: Einfache Datenanzeige aus einer lokalen Datei
-------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------
Monat 3: C# WPF mit MVVM-Architektur																								|
-------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------
Woche 1: Grundlagen der MVVM-Architektur

Tag 57: Was ist MVVM? Übersicht und Vorteile
Tag 58–59: Trennung von Model, View und ViewModel
Tag 60: Implementierung eines einfachen MVVM-Projekts
-------------------------------------------------------------------------------------------------------------------------------------
Woche 2: Arbeiten mit ViewModels

Tag 61–62: Command-Pattern: ICommand und RelayCommand
Tag 63–64: Kommunikation zwischen View und ViewModel
Tag 65–66: Mini-Projekt: Notizbuch-App in MVVM
-------------------------------------------------------------------------------------------------------------------------------------
Woche 3: Erweiterte MVVM-Konzepte

Tag 67–68: Dependency Injection und Services
Tag 69–70: Validierung in MVVM (Datenüberprüfung in ViewModels)
Tag 71–72: Mini-Projekt: Aufgabenmanagement-System
-------------------------------------------------------------------------------------------------------------------------------------
Woche 4: Abschlussprojekt und Optimierung

Tag 73–74: Abschlussprojekt starten: Eine kleine Anwendung (z. B. Budget-Tracker)
Tag 75–76: Verbesserungen und Fehlerbehebung
Tag 77–78: Code-Review und Dokumentation

Mit diesem Plan baust du systematisch Wissen auf: von den Grundlagen in C#, über WPF, bis hin zur modernen MVVM-Architektur. 
Das garantiert, dass du nach drei Monaten auf einem professionellen Niveau bist. 😊


-------------------------------------------------------------------------------------------------------------------------------------
Struktur des Projekts
Das Projekt wird die folgende Struktur haben:

In IntelliJ IDEA ist das tatsächlich einfacher, da jede Klasse mit einer eigenen public static void main-Methode problemlos ausgeführt werden kann, ohne dass du explizit einen Einstiegspunkt definieren musst. 
IntelliJ erkennt die main-Methode jeder Klasse und erlaubt es dir, die gewünschte Klasse direkt zu starten.

In Visual Studio hingegen ist es so, dass nur eine Main-Methode als Einstiegspunkt festgelegt sein darf. Das bedeutet, dass du in Visual Studio entweder:

-------------------------------------------------------------------------------------------------------------------------------------

Lernprojekt
│
├── Themen
│   ├── Monat 1: C# Basics
│   │   ├── Grundlegende Syntax: Variablen, Datentypen, einfache Operationen
│   │   ├── Kontrollstrukturen: if, else, switch
│   │   └── ...
│   |── Monat 2: C# WPF
│   |    ├── Tag_8.cs
│   |    ├── Tag_9.cs
│   |    └── ...
│	|-- Monat 3: C# WPF mit MVVM-Architektur
|	 	 ├── Tag_8.cs
│        ├── Tag_9.cs
│        └── ...
|
└── Program.cs